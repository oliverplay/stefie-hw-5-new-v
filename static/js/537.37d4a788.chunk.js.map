{"version":3,"file":"static/js/537.37d4a788.chunk.js","mappings":"8LAAA,IAAMA,EAAU,mCACVC,EAAY,iC,uJCMlBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzB,I,EAAMC,EAAU,mCAAG,WAAOC,GAAP,kGAGOF,EAAAA,EAAAA,IAAA,gBAAmBE,EAAnB,YATR,UASQ,oBAAsDJ,EAAAA,EAAtD,qBART,UAKE,cAGLK,EAHK,OAILC,EAAeD,EAAIE,KAJd,kBAKJD,GALI,gCAOXE,QAAQC,IAAI,2BAA4B,KAAMC,SAPnC,iEAAH,sD,SCMhB,E,QAdsBC,GAAAA,IAAH,oN,SCuCnB,EAlCgB,WACd,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WAERb,EAAWC,GAASa,MAAK,SAAAV,GAErBQ,EAAeR,EAAKW,QAEvB,GAEF,GAAE,KAGD,SAAC,EAAD,WACE,wBAC0B,IAAvBJ,EAAYK,QACX,wBAAI,6DAEJL,EAAYM,KAAI,SAACC,EAAQC,GAAT,OACd,2BACE,wBAAI,YACJ,uBAAID,EAAOE,UACX,wBAAI,YACJ,wBAAKF,EAAOG,YAJLF,EADK,OAYzB,C","sources":["API/api-params.js","API/get-reviews.js","components/Reviews/styled-reviews.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const KEY_API = 'cc8aceddc1acb4be5d6024b16563f8b2';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport { KEY_API, IMAGE_URL};","import axios from \"axios\";\n\nimport { KEY_API } from \"./api-params\";\n\nconst REVIEWS_PATH = `reviews`;\nconst language = 'en-US';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nconst getReviews = async (movieID) => {\n    \n    try {\n        const res = await axios.get(`movie/${movieID}/${REVIEWS_PATH}?api_key=${KEY_API}&language=${language}`);\n        const movieReviews = res.data\n        return movieReviews;\n    } catch (error) {\n        console.log('Something wrong with API', error.message);\n    };\n};\n\nexport { getReviews }","import styled from \"styled-components\";\n\nconst StyledReviews = styled.div`\n    li {\n        margin: 10px;\n    }\n    h5 {\n        color: grey;\n        border-bottom: .5px solid #4FB3F3;\n    }\n    p{\n        font-size: 14px;\n        color: grey;\n    }\n\n`\nexport default StyledReviews;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getReviews } from 'API/get-reviews';\n\nimport StyledReviews from './styled-reviews';\n\nconst Reviews = () => {\n  const { movieID } = useParams();\n  const [reviewsData, setReviewsData] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n    getReviews(movieID).then(data => {\n      if (mounted) {\n        setReviewsData(data.results);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <StyledReviews>\n      <ul>\n        {reviewsData.length === 0 ? (\n          <li>There are no reviews in the TMDB database for this film.</li>\n        ) : (\n          reviewsData.map((review, idx) => (\n            <li key={idx}>\n              <h4>Author</h4>\n              <p>{review.author}</p>\n              <h4>Review</h4>\n              <h5>{review.content}</h5>\n            </li>\n          ))\n        )}\n      </ul>\n    </StyledReviews>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY_API","IMAGE_URL","axios","getReviews","movieID","res","movieReviews","data","console","log","message","styled","useParams","useState","reviewsData","setReviewsData","useEffect","then","results","length","map","review","idx","author","content"],"sourceRoot":""}