{"version":3,"file":"static/js/886.4cf0d194.chunk.js","mappings":"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","sources":["API/api-params.js","pages/Home/styled-home.js","API/get-search.js","components/MovieForm/styled-movie-form.js","components/MovieForm/MovieForm.jsx","pages/Movies/Movies.jsx","pages/Movies/styled-movies.js"],"sourcesContent":["const KEY_API = 'cc8aceddc1acb4be5d6024b16563f8b2';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport { KEY_API, IMAGE_URL};","import styled from 'styled-components';\n\nconst StyledHome = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 20px;\n    \n    ul{\n        display: flex;\n        flex-wrap: wrap;\n        gap: 15px;\n        \n        @media (min-width: 1024px) {\n            gap: 20px;\n        }\n    }\n\n    li {\n        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n        transition: box-shadow, .9s;\n        &:hover,\n        &:focus{\n            box-shadow:\n            rgba(240, 46, 170, 0.4) 0px 5px,\n            rgba(240, 46, 170, 0.3) 0px 10px,\n            rgba(240, 46, 170, 0.2) 0px 15px,\n            rgba(240, 46, 170, 0.1) 0px 20px,\n            rgba(240, 46, 170, 0.05) 0px 25px;\n        }\n    }\n`;\n\nconst StyledTitle = styled.div`\n    width: 300px;\n    \n    @media(min-width:768px) {\n        width: 350px;\n    }\n\n    @media (min-width: 1024px) {\n        width: 310px;\n    }\n\n    h3{\n        margin: 5px;\n        font-weight: bold;\n        font-size: 18px; \n    }\n\n    p {\n        margin: 5px;\n        font-size: 15px;\n        font-weight: bold;\n        color: #E14FF3;\n    }\n`;\n\nconst StyledHeading = styled.h1`\n    text-align: center;\n    margin-bottom: 10px;\n    font-size: 20px;\n    text-align: left;\n    color: grey;\n`\n\nexport {\n    StyledHome,\n    StyledTitle,\n    StyledHeading\n};","import axios from \"axios\";\nimport { KEY_API } from \"./api-params\";\n\nconst SEARCH_PATH = 'search/movie';\nconst language = 'en-US';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nconst getSearch = async (query) => {\n    try {\n        const { data } = await axios.get(`${SEARCH_PATH}?api_key=${KEY_API}&query=${query}&language=${language}&include_adult=false`);\n        const searchMovies = data.results\n        return searchMovies;\n    } catch (error) {\n        console.log('Something wrong with API', error.message);\n    };\n};\n\nexport { getSearch }\n\n// https://api.themoviedb.org/3/search/movie?api_key=cc8aceddc1acb4be5d6024b16563f8b2&query=fdsaffdsa","import styled from 'styled-components';\n\nimport Background from '../../images/search.png'\nconst StyledForm = styled.form`\n    display: flex;\n    margin: 0 0 15px 0;\n\n    input {\n        padding: 10px 10px 0 5px;\n        font-size: 16px;\n        border: none;\n        border-bottom: 1px solid #4FB3F3;\n        background: transparent;\n        transition: box-shadow, .9s;\n        &:hover,\n        &:focus{\n            outline: none;\n            box-shadow: \n                rgba(240, 46, 170, 0.4) 0px 5px, \n                rgba(240, 46, 170, 0.3) 0px 10px, \n                rgba(240, 46, 170, 0.2) 0px 15px,\n                rgba(240, 46, 170, 0.1) 0px 20px,\n     rgba(240, 46, 170, 0.05) 0px 25px;\n        }\n    }\n\n    button {\n        padding: 15px;\n        font-size: 10px;\n        background: transparent;\n        border: 1px solid transparent;\n        border-bottom: 1px solid #4FB3F3;\n        background-image: url(${Background});\n        background-size: 25px 25px;\n        background-repeat: no-repeat;\n        background-position: center;\n        transition: box-shadow, .9s;\n        &:hover,\n        &:focus{\n            box-shadow: \n                rgba(240, 46, 170, 0.4) 0px 5px, \n                rgba(240, 46, 170, 0.3) 0px 10px, \n                rgba(240, 46, 170, 0.2) 0px 15px,\n                rgba(240, 46, 170, 0.1) 0px 20px,\n             rgba(240, 46, 170, 0.05) 0px 25px;\n            }\n        }\n    }\n\n`;\n\nexport default StyledForm;","import { func, string } from 'prop-types';\n\n\nimport StyledForm from './styled-movie-form';\nimport { StyledSection } from 'components/Section/styled-section';\nimport { StyledContainer } from 'components/Container/styled-container';\n\nconst MovieForm = ({onSubmit, onChange, query}) => {\n \n\n    return (\n        <StyledSection>\n            <StyledContainer>\n                <StyledForm onSubmit={onSubmit}> {/* Form component for movie search */}\n                    {/* Input field for entering the search query */}\n                    <input \n                        type='text'\n                        placeholder='movie search'\n                        value={query} // Current value of the input field\n                        onChange={onChange} // Triggered when input value changes\n                    />\n                    <button aria-label='search'type='submit'></button> {/* Search button */}\n                </StyledForm>\n            </StyledContainer>\n        </StyledSection>\n    );\n};\n\nMovieForm.propTypes = {\n    onSubmit: func.isRequired,\n    onChange: func.isRequired,\n    query: string.isRequired\n};\n\nexport default MovieForm;","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { IMAGE_URL } from \"API/api-params\";\nimport { getSearch } from \"API/get-search\";\n\nimport MovieForm from \"components/MovieForm/MovieForm\";\nimport {StyledMovie, StyledCard} from \"./styled-movies\";\nimport { StyledTitle } from \"pages/Home/styled-home\";\nimport { StyledSection } from \"components/Section/styled-section\";\nimport { StyledContainer } from \"components/Container/styled-container\";\nimport NotFound from \"pages/NotFound/NotFound\";\nimport { Loader } from \"components/Loader/Loader\";\n\n// Define the status values\nconst STATUS = {\n    IDLE: 'idle',\n    PENDING: 'pending',\n    REJECTED: 'rejected',\n    RESOLVED: 'resolved',\n};\n\nconst Movies = () => {\n    //Define State\n    const [query, setQuery] = useState(''); // Stores the current search query\n    const [searchData, setSearchData] = useState([]); // Stores the search results\n    const [searchParams, setSearchParams] = useSearchParams(); // Manages query parameter in URL\n    const [status, setStatus] = useState(STATUS.IDLE); // Tracks API request status \n    const location = useLocation();\n   \n    useEffect(() => {\n    // Trigger the API request when searchParams change\n        if (searchParams.get('query') !== null) {\n            const newQuery = searchParams.get('query');\n            setStatus(STATUS.PENDING); // Set status while fetching data\n            getSearch(newQuery)\n        .then(resp => {\n            setSearchData(resp); // Update the search data state with API response\n            setStatus(STATUS.RESOLVED); // Set status after successful fetch\n            console.log(resp);\n            resetForm(); // Reset the form after receiving the data\n        })\n        .catch(error => {\n            console.log(error);\n            setStatus(STATUS.REJECTED); // Set status if there's an error\n        });\n        }\n    }, [searchParams]);\n\n    const handleQueryChange = (e) => {\n        setQuery(e.currentTarget.value.toLowerCase()); //updates query state as user inputs search\n    }\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        if (query.trim() === \"\") {\n            return;\n        }\n       setSearchParams({ query: query }); // Update the URL with the new query parameter\n    };\n    \n    const resetForm = () => {\n        setQuery(''); \n    }\n    \n    return (\n        <StyledSection>\n        <StyledContainer>\n            <StyledMovie>\n                <h1 className='aria-hidden'>Movie Search</h1>\n                <MovieForm\n                    onSubmit={handleFormSubmit}\n                    onChange={handleQueryChange}\n                    query={query} />\n                {/* Render different content based on the status */}\n                {status === STATUS.IDLE && <h1>Enter a query to search for any movie in our database.</h1>}\n                {status === STATUS.PENDING && <Loader />}\n                {status === status.REJECTED && <NotFound />}\n                    {status === STATUS.RESOLVED && searchData && (\n                        <>\n                            {/* Render 'NotFound' component if searchData is empty */}\n                            {searchData.length === 0 ? (\n                                <NotFound />\n                            ) : (\n                                // Render search results if searchData is not empty                \n                                <ul>\n                                    {searchData.map((data, idx) => (\n                                        <li key={idx}>\n                                            <Link to={`./${data.id}`} state={{ from: location.pathname + location.search }}>\n                                                <StyledCard>\n                                                    <img src={data.poster_path\n                                                        ? IMAGE_URL + data.poster_path\n                                                        : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'}\n                                                        alt={data.title ? data.title : 'Title coming soon'}\n                                                    />\n                                                    <StyledTitle>\n                                                        <h3>{data.title\n                                                            ? data.title\n                                                            : data.original_title}\n                                                        </h3>\n                                                        <p>{data.release_date\n                                                            ? new Date(data.release_date).getFullYear()\n                                                            : '---'}\n                                                        </p>\n                                                    </StyledTitle>\n                                                </StyledCard>\n                                            </Link>\n                                        </li>\n                                    ))}\n                                </ul>\n                            )}\n                        </>\n                    )}\n            </StyledMovie>\n        </StyledContainer>\n        </StyledSection>\n    );\n};\n\nexport default Movies;","import styled from \"styled-components\";\n\nconst StyledMovie = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 26px;\n\n    .aria-hidden {\n        position: absolute;\n        left: -10000px;\n        width: 1px;\n        height: 1px;\n        overflow: hidden;\n    }\n\n    ul {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 15px;\n        \n        @media (min-width: 1024px) {\n            gap: 20px;\n        }   \n    }\n`;\n\nconst StyledCard = styled.div`\n    margin-bottom: 10px;\n    padding-bottom: 5px;\n    background-color: #fff;\n    height: 100%; \n    border: .5px solid #61f34f;\n\n    img {\n        width: 300px;\n        height: auto;\n        margin-bottom: 5px;\n        border-bottom: .5px solid #F4F5FF;\n        \n        @media(min-width:768px) {\n            width: 350px;\n            height: 525px;\n        }\n        @media (min-width: 1024px) {\n            width: 310px;\n            height: 465px;\n        }\n\n    }\n    \n`;\n\nexport {\n    StyledMovie,\n    StyledCard\n};"],"names":["KEY_API","IMAGE_URL","StyledHome","styled","StyledTitle","StyledHeading","axios","getSearch","query","data","searchMovies","results","console","log","message","onSubmit","onChange","type","placeholder","value","STATUS","useState","setQuery","searchData","setSearchData","useSearchParams","searchParams","setSearchParams","status","setStatus","location","useLocation","useEffect","get","newQuery","then","resp","resetForm","catch","error","className","e","preventDefault","trim","currentTarget","toLowerCase","Loader","REJECTED","NotFound","length","map","idx","to","id","state","from","pathname","search","src","poster_path","alt","title","original_title","release_date","Date","getFullYear","StyledMovie","StyledCard"],"sourceRoot":""}